// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "?Action=Delete": {
            "post": {
                "description": "删除 agent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "删除 agent",
                "parameters": [
                    {
                        "description": "删除请求参数",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/demo.DeleteParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "500": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "?Action=GetDetail": {
            "post": {
                "description": "获取详情",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取详情",
                "parameters": [
                    {
                        "description": "请求参数",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/demo.IDParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "$ref": "#/definitions/models.Demo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "?Action=GetList": {
            "post": {
                "description": "获取列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Demo"
                ],
                "summary": "获取列表",
                "parameters": [
                    {
                        "description": "查询通用请求参数",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/types.BasicQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.ResponseWithTotalCount"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Demo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "结果：{RetCode:code,Data:数据,Message:消息}",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Response": {
            "type": "object",
            "properties": {
                "Data": {},
                "Message": {
                    "type": "string"
                },
                "RetCode": {
                    "type": "integer"
                }
            }
        },
        "common.ResponseWithTotalCount": {
            "type": "object",
            "properties": {
                "Data": {},
                "Message": {
                    "type": "string"
                },
                "RetCode": {
                    "type": "integer"
                },
                "TotalCount": {
                    "type": "integer"
                }
            }
        },
        "demo.DeleteParams": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "description": "待删除 ID 列表",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "demo.IDParams": {
            "type": "object",
            "required": [
                "Id"
            ],
            "properties": {
                "Id": {
                    "description": "主键 ID",
                    "type": "integer"
                }
            }
        },
        "models.Demo": {
            "type": "object",
            "properties": {
                "CreateTime": {
                    "type": "integer"
                },
                "Creator": {
                    "type": "string"
                },
                "Deleter": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "UpdateTime": {
                    "description": "更新时间",
                    "type": "integer"
                },
                "Updater": {
                    "type": "string"
                },
                "User": {
                    "type": "string"
                }
            }
        },
        "types.BasicQuery": {
            "type": "object",
            "properties": {
                "Fields": {
                    "description": "指定返回字段",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "FuzzyField": {
                    "description": "模糊查询字段",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "IdList": {
                    "description": "id数组",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "Keyword": {
                    "description": "关键词(全局模糊搜索)",
                    "type": "string"
                },
                "Limit": {
                    "description": "分页条数",
                    "type": "integer"
                },
                "Offset": {
                    "description": "分页偏移量",
                    "type": "integer"
                },
                "Order": {
                    "description": "排序，支持desc和asc",
                    "type": "string"
                },
                "OrderBy": {
                    "description": "排序字段，默认按照创建时间降序",
                    "type": "string"
                },
                "Query": {
                    "description": "自定义查询语句；使用RSQL语法，具体见：https://cmdb-web.ucloudadmin.com/docs/#api-appendix-query-syntax",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "go-template",
	Description: "a template",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
